pipeline {
  agent none

  stages {
    stage('Checkout') {
      agent any
      steps {
        checkout scm
      }
    }

    stage('Build & Test') {
      agent {
        docker {
          image 'maven:3.8.8-openjdk-11'

          args  '--user root -v /root/.m2:/root/.m2 --entrypoint=""'
        }
      }
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -DskipTests
        '''
        archiveArtifacts artifacts: 'java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/*.jar', fingerprint: true
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'maven:3.8.8-eclipse-temurin-17'
          args  '--user root -v /root/.m2:/root/.m2 --entrypoint=""'
        }
      }
      environment {
        SONAR_URL = 'http://34.72.198.12:9000'
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.token=${SONAR_TOKEN} \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build & Push Docker Image') {
      agent any
      environment {
        IMAGE_NAME = "airforce7/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${IMAGE_NAME} .
          '''
          def dockerImage = docker.image("${IMAGE_NAME}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment') {
      agent any
      environment {
        GIT_REPO = 'java-cicd-pipeline'
        GIT_USER = 'shubh-swe'
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GIT_TOKEN')]) {
          sh '''
            git checkout main || git checkout -b main
            git pull origin main || echo "No upstream to pull from"

            git config user.name "Shubham Dwivedi"
            git config user.email "shubhamdwivedi.spacepilot@gmail.com"

            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            if git diff --quiet HEAD -- java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml; then
              echo "No changes to commit - deployment up to date"
            else
              git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
              git commit -m "Update image to ${BUILD_NUMBER}"
              git push https://${GIT_TOKEN}@github.com/${GIT_USER}/${GIT_REPO}.git HEAD:main
            fi
          '''
        }
      }
    }
  }

  post {
    always {
      node('any') {
        cleanWs()
      }
    }
  }
}
