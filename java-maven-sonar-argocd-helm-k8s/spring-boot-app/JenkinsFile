pipeline {
  agent none

  stages {
    stage('Checkout') {
      agent any
      steps {
        checkout scm
      }
    }

    stage('Build & Test') {
      agent {
        docker {
          image 'maven:3.8.8-eclipse-temurin-17'
          args  '--user root -v /root/.m2:/root/.m2'
        }
      }
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -DskipTests
        '''
        archiveArtifacts artifacts: 'java-maven-sonar-argocd-helm-k8s/spring-boot-app/target/*.jar', fingerprint: true
      }
    }

    stage('Static Code Analysis') {
      agent {
        docker {
          image 'maven:3.8.8-eclipse-temurin-17'
          args  '--user root -v /root/.m2:/root/.m2'
        }
      }
      environment {
        SONAR_URL = 'http://34.132.201.79:9000'
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.login=${SONAR_TOKEN} \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build & Push Docker Image') {
      agent {
        docker {
          image 'docker:24.0.1-dind'       // Official Docker-in-Docker image
          args  '--privileged -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      environment {
        IMAGE_NAME = "airforce7/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          docker build -t ${IMAGE_NAME} .
        '''
        script {
          docker.withRegistry('', 'docker-cred') {
            docker.image(IMAGE_NAME).push()
          }
        }
      }
    }

    stage('Update Deployment') {
      agent any
      environment {
        GIT_REPO   = 'java-cicd-pipeline'
        GIT_USER   = 'shubh-swe'
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GIT_TOKEN')]) {
          sh '''
            git config user.name "Shubham Dwivedi"
            git config user.email "shubhamdwivedi.spacepilot@gmail.com"
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" \
                java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update image to ${BUILD_NUMBER}"
            git push https://${GIT_TOKEN}@github.com/${GIT_USER}/${GIT_REPO}.git HEAD:main
          '''
        }
      }
    }
  }

  post {
    always {
      cleanWs()
    }
    failure {
      mail to: 'shubhamdwivedi.spacepilot@gmail.com',
           subject: "Build #${BUILD_NUMBER} Failed",
           body: "Check console output at ${BUILD_URL}"
    }
  }
}
